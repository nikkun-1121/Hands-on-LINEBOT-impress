service: hands-on-line-bot

# dotenvを使用する設定
useDotenv: true

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-1
  # デフォルトのIAMロールの設定
  iam:
    role:
      statements:
        # DynamoDBへのアクセス許可
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:Query"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource:
            - "Fn::GetAtt": [HandsOnLineBotTable, Arn]
        # S3へのアクセス許可
        - Effect: Allow
          Action:
            - "s3:PutObject"
          Resource:
            - "Fn::GetAtt": [HandsOnLineBotBucket, Arn]

custom:
  bucketName: hands-on-line-bot
  tableName: HandsOnLineBot

# Lambdaの設定
functions:
  webhook:
    handler: src/lambda/webhook.webhookHandler
    # API Gatewayの設定
    events:
      - http:
          path: webhook
          method: post
          # 非同期呼び出しを有効化
          async: true
    # 環境変数を設定
    environment:
      CHANNEL_ACCESS_TOKEN: ${env:CHANNEL_ACCESS_TOKEN}
      CHANNEL_SECRET: ${env:CHANNEL_SECRET}
      S3_BUCKET_NAME: ${self:custom.bucketName}
      TABLE_NAME: ${self:custom.tableName}
      NEWS_API_KEY: ${env:NEWS_API_KEY}

resources:
  Resources:
    # DynamoDBの設定
    HandsOnLineBotTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
          - AttributeName: DataType
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
          - AttributeName: DataType
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    # S3の設定
    HandsOnLineBotBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
    # S3のバケットポリシーの設定
    HandsOnLineBotBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${self:custom.bucketName}
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Action:
                - "s3:PutObject"
              Effect: Allow
              Resource:
                - arn:aws:s3:::${self:custom.bucketName}/*
              Principal:
                AWS:
                  - "Fn::GetAtt": [IamRoleLambdaExecution, Arn]
